function ConfigurableParameters = getAlgConfigurableParameters_mQSO()
    % PopulationSize: Number of particles in each sub-swarm.
    ConfigurableParameters.PopulationSize = struct( ...
        'value', 5, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Number of particles in each sub-swarm.');

    % x: Inertia weight used in velocity update.
    ConfigurableParameters.x = struct( ...
        'value', 0.729843788, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Inertia weight used in particle velocity update.');

    % c1: Cognitive coefficient influencing personal best position attraction.
    ConfigurableParameters.c1 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Cognitive coefficient that scales influence of personal best.');

    % c2: Social coefficient influencing global best position attraction.
    ConfigurableParameters.c2 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Social coefficient that scales influence of global best.');

    % QuantumNumber: Number of quantum particles generated per iteration.
    ConfigurableParameters.QuantumNumber = struct( ...
        'value', 5, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Number of quantum particles generated to explore space around best solution.');

    % SwarmNumber: Total number of sub-swarms in the population.
    ConfigurableParameters.SwarmNumber = struct( ...
        'value', 10, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Number of sub-swarms.');
end
