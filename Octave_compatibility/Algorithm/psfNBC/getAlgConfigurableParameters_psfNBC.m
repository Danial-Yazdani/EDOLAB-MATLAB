function ConfigurableParameters = getAlgConfigurableParameters_psfNBC()
    % PopulationSize: Number of particles in initial population.
    ConfigurableParameters.PopulationSize = struct( ...
        'value', 100, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'Number of particles in each sub-swarm.');

    % x: Inertia weight used in velocity update.
    ConfigurableParameters.x = struct( ...
        'value', 0.729843788, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Inertia weight used in particle velocity update.');

    % c1: Cognitive coefficient influencing personal best position attraction.
    ConfigurableParameters.c1 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Cognitive coefficient that scales influence of personal best.');

    % c2: Social coefficient influencing global best position attraction.
    ConfigurableParameters.c2 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Social coefficient that scales influence of global best.');
    
    % ratio: Proportion of retained particles from the previous generation used in species formation.
    ConfigurableParameters.ratio = struct( ...
        'value', 0.9, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', ['Proportion of retained particles from the previous generation used in species formation. ' ...
        'The remaining (1 - ratio) are newly initialized particles excluded from the structure-building process to enhance exploration.']);
    
    % mem_Maxsize: Maximum number of solutions stored in memory.
    ConfigurableParameters.mem_Maxsize = struct( ...
        'value', 50, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'The maximum number of best solutions stored in memory to preserve historical knowledge.');

end
