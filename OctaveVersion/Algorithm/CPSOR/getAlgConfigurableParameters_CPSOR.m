function ConfigurableParameters = getAlgConfigurableParameters_CPSOR()
    % initPopulationSize: Initial total number of particles.
    ConfigurableParameters.initPopulationSize = struct( ...
        'value', 100, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'Total number of particles at initialization.');

    % maxSubsize: Maximum allowable size of any sub‑swarm before trimming.
    ConfigurableParameters.maxSubsize = struct( ...
        'value', 5, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Maximum number of particles retained in a sub‑swarm to prevent overcrowding.');

    % w: Inertia weight balancing exploration and exploitation.
    ConfigurableParameters.w = struct( ...
        'value', 0.6, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Inertia weight applied to previous velocity in PSO update.');

    % c1: Cognitive coefficient influencing personal best attraction.
    ConfigurableParameters.c1 = struct( ...
        'value', 2.83, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Coefficient scaling the influence of each particle’s personal best.');

    % c2: Social coefficient influencing global best attraction.
    ConfigurableParameters.c2 = struct( ...
        'value', 2.83, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Coefficient scaling the influence of the sub‑swarm’s best position.');

    % ConvergenceLimit: Radius threshold to declare sub‑swarm convergence.
    ConfigurableParameters.ConvergenceLimit = struct( ...
        'value', 0.01, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Average distance threshold below which a sub‑swarm is considered converged.');

    % OverlapDegree: Proportion threshold for sub‑swarm overlap detection.
    ConfigurableParameters.OverlapDegree = struct( ...
        'value', 0.7, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Fraction of overlapping individuals required to trigger sub‑swarm merging or removal.');

    % DiversityDegree: Minimum survivor proportion before adding new particles.
    ConfigurableParameters.DiversityDegree = struct( ...
        'value', 0.3, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Minimum ratio of surviving particles to maintain diversity before reinitialization.');
end
