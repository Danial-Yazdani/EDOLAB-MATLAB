function ConfigurableParameters = getAlgConfigurableParameters_IDSPSO()
    % PopulationSize: The total number of individuals across all species in the population.
    ConfigurableParameters.PopulationSize = struct( ...
        'value', 100, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'Total number of individuals in the population (across all species).' ...
    );
    
    % x: Inertia weight used in velocity update.
    ConfigurableParameters.x = struct( ...
        'value', 0.729843788, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Inertia weight controlling exploration and exploitation.' ...
    );
    
    % c1: Cognitive coefficient influencing personal best position attraction.
    ConfigurableParameters.c1 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Cognitive acceleration coefficient influencing personal experience.' ...
    );
    
    % c2: Social coefficient influencing global best position attraction.
    ConfigurableParameters.c2 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Social acceleration coefficient influencing global best attraction.' ...
    );
    
    % Radius: A distance threshold used to determine species membership.
    ConfigurableParameters.Radius = struct( ...
        'value', 30, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Threshold distance to group individuals into the same species.' ...
    );
    
    % Pmax: Limit the number of active individuals in each species to Pmax.
    ConfigurableParameters.Pmax = struct( ...
        'value', 10, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Maximum number of active individuals allowed per species.' ...
    );
end