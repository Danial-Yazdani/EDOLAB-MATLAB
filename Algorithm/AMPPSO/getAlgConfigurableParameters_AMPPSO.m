function ConfigurableParameters = getAlgConfigurableParameters_AMPPSO()
    % Total number of individuals at initialization.
    ConfigurableParameters.initPopulationSize = struct( ...
        'value', 100, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'Total number of individuals at initialization.');
    % w: Inertia weight used in velocity update.
    ConfigurableParameters.w = struct( ...
        'value', 0.7298, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Inertia weight balancing exploration and exploitation.');

    % c1: Cognitive coefficient influencing personal best attraction.
    ConfigurableParameters.c1 = struct( ...
        'value', 1.496, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Cognitive acceleration coefficient scaling influence of personal best.');

    % c2: Social coefficient influencing global best attraction.
    ConfigurableParameters.c2 = struct( ...
        'value', 1.496, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Social acceleration coefficient scaling influence of global best.');
    
    % ConvergenceLimit: Radius threshold to determine hibernation.
    ConfigurableParameters.ConvergenceLimit = struct( ...
        'value', 0.00001, ...
        'type', 'numeric', ...
        'range', [0, 0.1], ...
        'description', 'Sub‑swarm radius below which it is considered converged (hibernated).');

    % OverlapDegree: Proportion threshold for sub‑swarm overlap detection.
    ConfigurableParameters.OverlapDegree = struct( ...
        'value', 0.1, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Proportion of individuals that must overlap to trigger sub‑swarm removal.');
    
    % diversityFactor: Factor for diversity‐based activation threshold.
    ConfigurableParameters.diversityFactor = struct( ...
        'value', 0.005, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Factor used to scale domain size for diversity-based activation of sub‑swarms.');

    % StepIndivs: Base step for population size adjustment.
    ConfigurableParameters.StepIndivs = struct( ...
        'value', 10, ...
        'type', 'integer', ...
        'range', [0, 100], ...
        'description', 'Base number of individuals used as a unit when increasing diversity.');    
end
