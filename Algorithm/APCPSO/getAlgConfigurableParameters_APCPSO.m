function ConfigurableParameters = getAlgConfigurableParameters_APCPSO()
    % PopulationSize: Total number of individuals at initialization.
    ConfigurableParameters.PopulationSize = struct( ...
        'value', 100, ...
        'type', 'integer', ...
        'range', [0, 1000], ...
        'description', 'Total number of individuals at initialization.');

    % omega_max: Maximum value of inertia weight in adaptive PSO.
    ConfigurableParameters.omega_max = struct( ...
        'value', 0.6, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Maximum inertia weight in velocity update.');

    % omega_min: Minimum value of inertia weight in adaptive PSO.
    ConfigurableParameters.omega_min = struct( ...
        'value', 0.3, ...
        'type', 'numeric', ...
        'range', [0, 2], ...
        'description', 'Minimum inertia weight in velocity update.');

    % c1: Cognitive coefficient for personal best guidance.
    ConfigurableParameters.c1 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Acceleration coefficient for cognitive component.');

    % c2: Social coefficient for global best guidance.
    ConfigurableParameters.c2 = struct( ...
        'value', 2.05, ...
        'type', 'numeric', ...
        'range', [0, 5], ...
        'description', 'Acceleration coefficient for social component.');

    % MaxSubPopIterations: Maximum iterations for adaptive weight calculation.
    ConfigurableParameters.MaxSubPopIterations = struct( ...
        'value', 50, ...
        'type', 'integer', ...
        'range', [1, 1000], ...
        'description', 'Maximum local iterations per sub-population.');

    % StagnationThreshold: Iteration limit to detect stagnation of particles.
    ConfigurableParameters.StagnationThreshold = struct( ...
        'value', 15, ...
        'type', 'integer', ...
        'range', [1, 100], ...
        'description', 'Threshold to declare particle stagnation.');

    % ConvergenceThreshold: Radius threshold to declare convergence of sub-pop.
    ConfigurableParameters.ConvergenceThreshold = struct( ...
        'value', 0.1, ...
        'type', 'numeric', ...
        'range', [0, 1], ...
        'description', 'Threshold for sub-swarm convergence radius.');
end